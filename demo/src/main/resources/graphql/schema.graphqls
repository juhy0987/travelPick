scalar Date

type Query {
  hello: String

  getLocation(id: Int!): LocationDto

  getResort(id: Int!): ResortDto
  searchResorts(searchDto: SearchDto!): [SearchResultDto]
  autoComplete(query: String!): [AutoCompleteDto]

  getPhoto(id: Int!): PhotoDto
  getPhotos(photoGetDto: PhotoGetDto!): [PhotoDto]

  getReview(id: Int!): ReviewDto
  createReview(reviewRegisterDto: ReviewRegisterDto!): ReviewDto
  updateReview(reviewUpdateDto: ReviewUpdateDto!): ReviewDto
  deleteReview(id: Int!): String
}

type Mutation {
  createReview(reviewDto: ReviewRegisterDto): ReviewDto
}

type AutoCompleteDto {
  id: Int!
  name: String!
  similarity: Int !
  thumbnail: String
}

type LocationDto {
  id: Int!
  name: String!
  latitude: Float!
  longitude: Float!
  timezone: String
  parent: LocationDto
}

type ResortDto {
  id: Int!
  name: String!
  description: String
  ancestor: LocationDto
  photos: [PhotoDto]
}

type SearchResultDto {
  id: Int!
  name: String!
  description: String
  ancestor: LocationDto
  photos: [PhotoDto]
  similarity: Float
}

type ReviewDto {
  id: Int!
  resort_id: Int
  user_id: Int
  content: String
  created: Date
  updated: Date
  photos: [PhotoDto]
}

type PhotoDto {
  id: Int!
  dataurl: String!
  index: Int!
}


input SearchDto {
  query: String
  dataurls: [String]
}

input PhotoGetDto {
  resort_id: Int!
  offset: Int!
  limit: Int
}

input ReviewRegisterDto {
  resort_id: Int!
  content: String!
  photos: [String]
}

input ReviewUpdateDto {
  id: Int!
  content: String
  delete_photos: [Int]
  add_photos: [String]
}
